{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\fokic\\\\WebstormProjects\\\\cordovaReactProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\fokic\\\\WebstormProjects\\\\cordovaReactProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\fokic\\\\WebstormProjects\\\\cordovaReactProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\fokic\\\\WebstormProjects\\\\cordovaReactProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\fokic\\\\WebstormProjects\\\\cordovaReactProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Link}from\"react-router-dom\";import'../App.css';//import components\nimport QuestCard from\"./QuestCard\";import Button from\"../Button\";//import files\nimport quests_text from\"../img/UI/quests_text.png\";import btn_settings from\"../img/UI/buttons/btn_settings.png\";var QuestView=/*#__PURE__*/function(_Component){_inherits(QuestView,_Component);function QuestView(props){var _this;_classCallCheck(this,QuestView);_this=_possibleConstructorReturn(this,_getPrototypeOf(QuestView).call(this,props));//delete if not needed\n_this.storage=_this.props.storage;return _this;}//variables\n_createClass(QuestView,[{key:\"render\",value:function render(){//alert(JSON.parse(this.storage.getItem(\"questsArray\")));\n// if (questsArray.length < 1){\n//     em\n// }\n//alert(questsArray.length);\nreturn React.createElement(\"div\",{id:\"questView\"},React.createElement(\"div\",{style:{backgroundColor:\"#D8A26F\"}},React.createElement(\"img\",{id:\"questTextImg\",src:quests_text}),React.createElement(\"div\",{id:\"questCards\",style:{height:this.initial_height*0.72+\"px\",overflow:\"scroll\"}},this.loadCards())));}},{key:\"componentWillMount\",value:function componentWillMount(){this.initial_height=parseInt(document.body.scrollHeight);}},{key:\"componentDidMount\",value:function componentDidMount(){var i;//set questView height\nvar body_height=parseInt(document.body.scrollHeight)-2*parseInt(getComputedStyle(document.getElementById('questView'),null).getPropertyValue('border-width'));document.getElementById(\"questView\").setAttribute(\"style\",\"height: \"+body_height+\"px\");//set questText height\nvar quest_height=this.initial_height*0.07;document.getElementById(\"questTextImg\").setAttribute(\"style\",\"height:\"+quest_height+\"px; margin-top: 10px;\");}},{key:\"loadCards\",value:function loadCards(){var _this2=this;var questsArray=[];var questsRender=[];//read quests array from localstorage\nif(this.storage.getItem(\"questsArray\")===\"\"){//do nothing\n//alert(\"first launch\");\n}else{questsArray=JSON.parse(this.storage.getItem(\"questsArray\"));//alert(questsArray.length);\nreturn React.createElement(\"div\",null,questsArray.map(function(quest,i){return React.createElement(QuestCard,{initial_height:_this2.initial_height});}));// var i;\n// for (i = 0; i < questsArray.length; i++){\n//     alert(i);\n//\n//     //return (<div>hello</div>);\n//     // return <QuestCard initial_height = {this.initial_height}/>;\n//     //questsRender.push(<QuestCard initial_height = {this.initial_height}/>);\n//     return {questsRender};\n//     //  quest_name = {questsArray[i].quest_name} quest_details = {questsArray[i].quest_details} quest_diff = {questsArray[i].quest_diff}\n// }\n}}}]);return QuestView;}(Component);export default QuestView;","map":{"version":3,"sources":["C:/Users/fokic/WebstormProjects/cordovaReactProject/src/view_quests/QuestView.js"],"names":["React","Component","Link","QuestCard","Button","quests_text","btn_settings","QuestView","props","storage","backgroundColor","height","initial_height","overflow","loadCards","parseInt","document","body","scrollHeight","i","body_height","getComputedStyle","getElementById","getPropertyValue","setAttribute","quest_height","questsArray","questsRender","getItem","JSON","parse","map","quest"],"mappings":"+sBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OACIC,IADJ,KAEO,kBAFP,CAGA,MAAO,YAAP,CACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA;AACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,oCAAzB,C,GAEMC,CAAAA,S,mEACF,mBAAYC,KAAZ,CAAkB,2CACd,2EAAMA,KAAN,GACA;AAFc,MAOlBC,OAPkB,CAOR,MAAKD,KAAL,CAAWC,OAPH,cAGjB,CAED;6DAIQ,CACJ;AAGA;AACA;AACA;AACA;AAIA,MACI,4BAAK,EAAE,CAAC,WAAR,EACI,2BAAK,KAAK,CAAE,CAACC,eAAe,CAAE,SAAlB,CAAZ,EACI,2BAAK,EAAE,CAAC,cAAR,CAAuB,GAAG,CAAEL,WAA5B,EADJ,CAII,2BAAK,EAAE,CAAC,YAAR,CAAqB,KAAK,CAAE,CAACM,MAAM,CAAE,KAAKC,cAAL,CAAoB,IAApB,CAA2B,IAApC,CAA0CC,QAAQ,CAAE,QAApD,CAA5B,EAEK,KAAKC,SAAL,EAFL,CAJJ,CADJ,CADJ,CAeH,C,+DAEoB,CACjB,KAAKF,cAAL,CAAsBG,QAAQ,CAACC,QAAQ,CAACC,IAAT,CAAcC,YAAf,CAA9B,CACH,C,6DAEkB,CACf,GAAIC,CAAAA,CAAJ,CACA;AACA,GAAIC,CAAAA,WAAW,CAAGL,QAAQ,CAACC,QAAQ,CAACC,IAAT,CAAcC,YAAf,CAAR,CAAwC,EAAEH,QAAQ,CAACM,gBAAgB,CAACL,QAAQ,CAACM,cAAT,CAAwB,WAAxB,CAAD,CAAsC,IAAtC,CAAhB,CAA4DC,gBAA5D,CAA6E,cAA7E,CAAD,CAApE,CACAP,QAAQ,CAACM,cAAT,CAAwB,WAAxB,EAAqCE,YAArC,CAAkD,OAAlD,CAA4D,WAAaJ,WAAb,CAA2B,IAAvF,EACA;AACA,GAAIK,CAAAA,YAAY,CAAG,KAAKb,cAAL,CAAoB,IAAvC,CACAI,QAAQ,CAACM,cAAT,CAAwB,cAAxB,EAAwCE,YAAxC,CAAqD,OAArD,CAA+D,UAAYC,YAAZ,CAA2B,uBAA1F,EACH,C,6CAEU,iBACP,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CACA;AACA,GAAG,KAAKlB,OAAL,CAAamB,OAAb,CAAqB,aAArB,IAAwC,EAA3C,CAA8C,CAC1C;AACA;AACH,CAHD,IAII,CACAF,WAAW,CAAGG,IAAI,CAACC,KAAL,CAAW,KAAKrB,OAAL,CAAamB,OAAb,CAAqB,aAArB,CAAX,CAAd,CACA;AACA,MAAO,gCAEHF,WAAW,CAACK,GAAZ,CAAgB,SAACC,KAAD,CAAQb,CAAR,QACZ,qBAAC,SAAD,EAAW,cAAc,CAAI,MAAI,CAACP,cAAlC,EADY,EAAhB,CAFG,CAAP,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CACJ,C,uBAjFmBX,S,EAoFxB,cAAeM,CAAAA,SAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport '../App.css';\r\n//import components\r\nimport QuestCard from \"./QuestCard\";\r\nimport Button from \"../Button\";\r\n//import files\r\nimport quests_text from \"../img/UI/quests_text.png\";\r\nimport btn_settings from \"../img/UI/buttons/btn_settings.png\";\r\n\r\nclass QuestView extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        //delete if not needed\r\n    }\r\n\r\n    //variables\r\n    initial_height;\r\n    storage = this.props.storage;\r\n\r\n    render(){\r\n        //alert(JSON.parse(this.storage.getItem(\"questsArray\")));\r\n\r\n\r\n        // if (questsArray.length < 1){\r\n        //     em\r\n        // }\r\n        //alert(questsArray.length);\r\n\r\n\r\n\r\n        return (\r\n            <div id=\"questView\">\r\n                <div style={{backgroundColor: \"#D8A26F\"}}>\r\n                    <img id=\"questTextImg\" src={quests_text}/>\r\n                    {/*<img id=\"btnSettings\" src={btn_settings} style={{selfAlign: \"right\"}}/>*/}\r\n                    {/*<Button init_height={this.initial_height} btn_src={btn_settings} btn_id=\"btn_settings\" btn_action=\"/settings\" btn_size=\"m\"/>*/}\r\n                    <div id=\"questCards\" style={{height: this.initial_height*0.72 + \"px\", overflow: \"scroll\"}}>\r\n                        {/*iterate through quests array to create cards*/}\r\n                        {this.loadCards()}\r\n                        {/*<QuestCard initial_height = {this.initial_height}/>*/}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.initial_height = parseInt(document.body.scrollHeight);\r\n    }\r\n\r\n    componentDidMount(){\r\n        let i;\r\n        //set questView height\r\n        let body_height = parseInt(document.body.scrollHeight) - (2*parseInt(getComputedStyle(document.getElementById('questView'),null).getPropertyValue('border-width')));\r\n        document.getElementById(\"questView\").setAttribute(\"style\", (\"height: \" + body_height + \"px\"));\r\n        //set questText height\r\n        let quest_height = this.initial_height*0.07;\r\n        document.getElementById(\"questTextImg\").setAttribute(\"style\", (\"height:\" + quest_height + \"px; margin-top: 10px;\"));\r\n    }\r\n\r\n    loadCards(){\r\n        var questsArray = [];\r\n        var questsRender = [];\r\n        //read quests array from localstorage\r\n        if(this.storage.getItem(\"questsArray\") === \"\"){\r\n            //do nothing\r\n            //alert(\"first launch\");\r\n        }\r\n        else{\r\n            questsArray = JSON.parse(this.storage.getItem(\"questsArray\"));\r\n            //alert(questsArray.length);\r\n            return <div>\r\n            {\r\n                questsArray.map((quest, i) =>\r\n                    <QuestCard initial_height = {this.initial_height}/>\r\n                )\r\n            }\r\n            </div>;\r\n            // var i;\r\n            // for (i = 0; i < questsArray.length; i++){\r\n            //     alert(i);\r\n            //\r\n            //     //return (<div>hello</div>);\r\n            //     // return <QuestCard initial_height = {this.initial_height}/>;\r\n            //     //questsRender.push(<QuestCard initial_height = {this.initial_height}/>);\r\n            //     return {questsRender};\r\n            //     //  quest_name = {questsArray[i].quest_name} quest_details = {questsArray[i].quest_details} quest_diff = {questsArray[i].quest_diff}\r\n            // }\r\n        }\r\n    }\r\n}\r\n\r\nexport default QuestView;\r\n"]},"metadata":{},"sourceType":"module"}